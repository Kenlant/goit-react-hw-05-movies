{"version":3,"file":"static/js/107.aafcd07c.chunk.js","mappings":"oRAKMA,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IACTC,OAAQ,CACNC,QAPY,sCAWHC,EAAc,kBACzBN,EACGO,IADH,uBAEGC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNC,eAAgBF,EAAEE,eAFb,GADF,GAJgB,EAWdC,EAAS,SAAAC,GAAK,OACzBjB,EACGO,IADH,8BAC8BU,IAC3BT,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNC,eAAgBF,EAAEE,eAFb,GADF,GAJgB,EAWdG,EAAkB,SAAAJ,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,IACdN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IACNF,MAAK,SAAAC,GAAC,MAAK,CACVU,aAAcV,EAAEU,aAChBC,OAAQX,EAAEW,OACVC,MAAOZ,EAAEY,MACTC,SAAUb,EAAEa,SACZC,YAzCkB,kCAyCad,EAAEc,YAL5B,GAJsB,EAYpBC,EAAkB,SAAAV,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,EADjB,aAEGN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKe,IAAX,IACNjB,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNY,KAAMb,EAAEa,KACRC,UAAWd,EAAEc,UACbC,aApDiB,kCAoDgBf,EAAEe,aAJ9B,GADF,GAJsB,EAapBC,EAAkB,SAAAf,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,EADjB,aAEGN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNgB,OAAQjB,EAAEiB,OACVC,QAASlB,EAAEkB,QAHN,GADF,GAJsB,C,2ECzDlB,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,eAAIC,UAAU,aAAd,SACGD,EAAOrB,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,eAAImB,UAAU,mBAAd,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAarB,GAArB,SAA4BC,KADQD,EAD5B,KAOjB,C,oHCTc,SAASsB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRjC,EAAAA,EAAAA,MAAcE,KAAK8B,EACpB,GAAE,KAGD,iBAAKJ,UAAU,OAAf,WACE,4CACA,SAAC,IAAD,CAAWD,OAAQA,MAGxB,C","sources":["api/api.js","components/common/MovieList/MovieList.jsx","components/pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1bb8f29c02a9512893fb765ccd284a77';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w342';\nconst BASE_PROFILE_URL = 'https://image.tmdb.org/t/p/w185';\nconst apiClient = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = () =>\n  apiClient\n    .get(`/trending/movie/day`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const search = query =>\n  apiClient\n    .get(`/search/movie?query=${query}`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const getMovieDetails = id =>\n  apiClient\n    .get(`/movie/${id}`)\n    .then(x => x.data)\n    .then(x => ({\n      vote_average: x.vote_average,\n      genres: x.genres,\n      title: x.title,\n      overview: x.overview,\n      poster_path: BASE_POSTER_URL + x.poster_path,\n    }));\n\nexport const getMovieCredits = id =>\n  apiClient\n    .get(`/movie/${id}/credits`)\n    .then(x => x.data.cast)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        name: y.name,\n        character: y.character,\n        profile_path: BASE_PROFILE_URL + y.profile_path,\n      }))\n    );\n\nexport const getMovieReviews = id =>\n  apiClient\n    .get(`/movie/${id}/reviews`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        author: y.author,\n        content: y.content,\n      }))\n    );\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function MovieList({ movies }) {\n  return (\n    <ul className=\"movie-list\">\n      {movies.map(({ id, original_title }) => (\n        <li className=\"movie-list__item\" key={id}>\n          <Link to={`/movies/${id}`}>{original_title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from '../../common/MovieList/MovieList';\nimport { getTrending } from '../../../api/api';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrending().then(setMovies);\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <h1>Trending today</h1>\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n"],"names":["apiClient","axios","baseURL","timeout","params","api_key","getTrending","get","then","x","data","results","map","y","id","original_title","search","query","getMovieDetails","vote_average","genres","title","overview","poster_path","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content","MovieList","movies","className","to","Home","useState","setMovies","useEffect"],"sourceRoot":""}