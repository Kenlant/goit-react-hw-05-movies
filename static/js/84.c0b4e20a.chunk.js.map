{"version":3,"file":"static/js/84.c0b4e20a.chunk.js","mappings":"mRAKMA,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IACTC,OAAQ,CACNC,QAPY,sCAWHC,EAAc,kBACzBN,EACGO,IADH,uBAEGC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNC,eAAgBF,EAAEE,eAFb,GADF,GAJgB,EAWdC,EAAS,SAAAC,GAAK,OACzBjB,EACGO,IADH,8BAC8BU,IAC3BT,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNC,eAAgBF,EAAEE,eAFb,GADF,GAJgB,EAWdG,EAAkB,SAAAJ,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,IACdN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IACNF,MAAK,SAAAC,GAAC,MAAK,CACVU,aAAcV,EAAEU,aAChBC,OAAQX,EAAEW,OACVC,MAAOZ,EAAEY,MACTC,SAAUb,EAAEa,SACZC,YAzCkB,kCAyCad,EAAEc,YAL5B,GAJsB,EAYpBC,EAAkB,SAAAV,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,EADjB,aAEGN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKe,IAAX,IACNjB,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNY,KAAMb,EAAEa,KACRC,UAAWd,EAAEc,UACbC,aApDiB,kCAoDgBf,EAAEe,aAJ9B,GADF,GAJsB,EAapBC,EAAkB,SAAAf,GAAE,OAC/Bd,EACGO,IADH,iBACiBO,EADjB,aAEGN,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IACNH,MAAK,SAAAC,GAAC,OACLA,EAAEG,KAAI,SAAAC,GAAC,MAAK,CACVC,GAAID,EAAEC,GACNgB,OAAQjB,EAAEiB,OACVC,QAASlB,EAAEkB,QAHN,GADF,GAJsB,C,2ECzDlB,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,eAAIC,UAAU,aAAd,SACGD,EAAOrB,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,eAAImB,UAAU,mBAAd,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAarB,GAArB,SAA4BC,KADQD,EAD5B,KAOjB,C,yHCVYsB,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0CAIVE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iIAQXI,EAAkBJ,EAAAA,GAAAA,OAAH,yE,SCXb,SAASK,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OACE,SAAC,KAAD,CACEC,cAAe,CAAEC,WAAW,IAC5BF,SAAU,SAACG,EAAD,IACRC,EADmC,EAAhBA,aAEnBJ,EAASG,EAAOD,WACjB,EALH,UAOE,UAACT,EAAD,YACE,SAACG,EAAD,CAAaS,KAAK,OAAOtB,KAAK,gBAC9B,SAACe,EAAD,CAAiBO,KAAK,SAAtB,wBAIP,C,sBCdc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KAMA,OACE,iCACE,SAACT,EAAD,CAAYC,SANhB,SAAsBS,IACpBpC,EAAAA,EAAAA,IAAOoC,GAAO5C,KAAK2C,EACpB,KAKG,SAACnB,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["api/api.js","components/common/MovieList/MovieList.jsx","components/forms/SeachForm/SearchForm.styled.js","components/forms/SeachForm/SearchForm.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1bb8f29c02a9512893fb765ccd284a77';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w342';\nconst BASE_PROFILE_URL = 'https://image.tmdb.org/t/p/w185';\nconst apiClient = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = () =>\n  apiClient\n    .get(`/trending/movie/day`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const search = query =>\n  apiClient\n    .get(`/search/movie?query=${query}`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const getMovieDetails = id =>\n  apiClient\n    .get(`/movie/${id}`)\n    .then(x => x.data)\n    .then(x => ({\n      vote_average: x.vote_average,\n      genres: x.genres,\n      title: x.title,\n      overview: x.overview,\n      poster_path: BASE_POSTER_URL + x.poster_path,\n    }));\n\nexport const getMovieCredits = id =>\n  apiClient\n    .get(`/movie/${id}/credits`)\n    .then(x => x.data.cast)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        name: y.name,\n        character: y.character,\n        profile_path: BASE_PROFILE_URL + y.profile_path,\n      }))\n    );\n\nexport const getMovieReviews = id =>\n  apiClient\n    .get(`/movie/${id}/reviews`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        author: y.author,\n        content: y.content,\n      }))\n    );\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function MovieList({ movies }) {\n  return (\n    <ul className=\"movie-list\">\n      {movies.map(({ id, original_title }) => (\n        <li className=\"movie-list__item\" key={id}>\n          <Link to={`/movies/${id}`}>{original_title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n`;\n\nexport const InputStyled = styled(Field)`\n  padding: 5px;\n  font-size: 20px;\n  border: 1px solid grey;\n  border-right: none;\n  outline: none;\n`;\n\nexport const SubmitBtnStyled = styled.button`\n  border: 1px solid grey;\n  border-left: none;\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { FormStyled, InputStyled, SubmitBtnStyled } from './SearchForm.styled';\n\nexport default function SearchForm({ onSubmit }) {\n  return (\n    <Formik\n      initialValues={{ searchTerm: `` }}\n      onSubmit={(values, { resetForm }) => {\n        resetForm();\n        onSubmit(values.searchTerm);\n      }}\n    >\n      <FormStyled>\n        <InputStyled type=\"text\" name=\"searchTerm\" />\n        <SubmitBtnStyled type=\"submit\">Search</SubmitBtnStyled>\n      </FormStyled>\n    </Formik>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState } from 'react';\nimport SearchForm from '../../forms/SeachForm/SearchForm';\nimport MovieList from '../../common/MovieList/MovieList';\nimport { search } from '../../../api/api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n\n  function onFormSubmit(value) {\n    search(value).then(setMovies);\n  }\n\n  return (\n    <>\n      <SearchForm onSubmit={onFormSubmit} />\n      <MovieList movies={movies} />\n    </>\n  );\n}\n"],"names":["apiClient","axios","baseURL","timeout","params","api_key","getTrending","get","then","x","data","results","map","y","id","original_title","search","query","getMovieDetails","vote_average","genres","title","overview","poster_path","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content","MovieList","movies","className","to","FormStyled","styled","Form","InputStyled","Field","SubmitBtnStyled","SearchForm","onSubmit","initialValues","searchTerm","values","resetForm","type","Movies","useState","setMovies","value"],"sourceRoot":""}