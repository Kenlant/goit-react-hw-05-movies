{"version":3,"file":"static/js/7.88463f6d.chunk.js","mappings":"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","sources":["api/api.js","components/pages/Movie/MovieDetails/MovieDetails.styled.js","components/pages/Movie/MovieDetails/MovieDetails.jsx","components/pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1bb8f29c02a9512893fb765ccd284a77';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w342';\nconst BASE_PROFILE_URL = 'https://image.tmdb.org/t/p/w185';\nconst apiClient = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = () =>\n  apiClient\n    .get(`/trending/movie/day`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const search = query =>\n  apiClient\n    .get(`/search/movie?query=${query}`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        original_title: y.original_title,\n      }))\n    );\n\nexport const getMovieDetails = id =>\n  apiClient\n    .get(`/movie/${id}`)\n    .then(x => x.data)\n    .then(x => ({\n      vote_average: x.vote_average,\n      genres: x.genres,\n      title: x.title,\n      overview: x.overview,\n      poster_path: BASE_POSTER_URL + x.poster_path,\n    }));\n\nexport const getMovieCredits = id =>\n  apiClient\n    .get(`/movie/${id}/credits`)\n    .then(x => x.data.cast)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        name: y.name,\n        character: y.character,\n        profile_path: BASE_PROFILE_URL + y.profile_path,\n      }))\n    );\n\nexport const getMovieReviews = id =>\n  apiClient\n    .get(`/movie/${id}/reviews`)\n    .then(x => x.data.results)\n    .then(x =>\n      x.map(y => ({\n        id: y.id,\n        author: y.author,\n        content: y.content,\n      }))\n    );\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DetailsContainer } from './MovieDetails.styled';\nimport { getMovieDetails } from '../../../../api/api';\n\nexport default function MovieDetails({ id }) {\n  const [movie, setMovie] = useState({});\n  const { vote_average, genres, title, overview, poster_path } = movie;\n  const rating = Math.round(vote_average * 10);\n  const movieGenres = genres?.map(x => x.name).join(' ');\n\n  useEffect(() => {\n    getMovieDetails(id).then(setMovie);\n  }, [id]);\n\n  return (\n    <DetailsContainer className=\"movie-details\">\n      <img className=\"movie-details__img\" src={poster_path} alt={title} />\n      <div className=\"movie-details__info\">\n        <h2 className=\"movie-details__title\">{title}</h2>\n        <span className=\"movie-details__score\">User Score: {rating}%</span>\n        <h3 className=\"movie-details__overview-title\">Overview</h3>\n        <p className=\"movie-details__overview\">{overview}</p>\n        <h4 className=\"movie-details__genres-title\">Genres</h4>\n        <p className=\"movie-details__genres\">{movieGenres}</p>\n      </div>\n    </DetailsContainer>\n  );\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import { lazy } from 'react';\nimport { useParams, Route, Routes, Link } from 'react-router-dom';\nimport MovieDetails from './MovieDetails/MovieDetails';\n\nconst MovieCast = lazy(() => import(`./MovieCast/MovieCast`));\nconst MovieReviews = lazy(() => import(`./MovieReviews/MovieReviews`));\n\nexport default function Movie() {\n  const { id } = useParams();\n\n  return (\n    <section className=\"movie\">\n      <h1 hidden>Movie</h1>\n      <MovieDetails id={id} />\n      <div className=\"movie__additional-info\">\n        <h2>Additional Information</h2>\n        <ul className=\"movie__additional-info-list\">\n          <li className=\"movie__additional-info-list-item\">\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li className=\"movie__additional-info-list-item\">\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<MovieCast id={id} />} />\n        <Route path=\"reviews\" element={<MovieReviews id={id} />} />\n      </Routes>\n    </section>\n  );\n}\n"],"names":["apiClient","axios","baseURL","timeout","params","api_key","getTrending","get","then","x","data","results","map","y","id","original_title","search","query","getMovieDetails","vote_average","genres","title","overview","poster_path","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content","DetailsContainer","styled","MovieDetails","useState","movie","setMovie","rating","Math","round","movieGenres","join","useEffect","className","src","alt","MovieCast","lazy","MovieReviews","Movie","useParams","hidden","to","path","element"],"sourceRoot":""}